{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    PostList,\n    PostForm\n  },\n  data() {\n    return {\n      lists: [],\n      dialogVisible: false,\n      selectedSort: '',\n      page: 1,\n      limit: 10,\n      maxLists: 0,\n      sortOptions: [{\n        value: 'title',\n        name: 'По названию'\n      }, {\n        value: 'body',\n        name: 'По содержимому'\n      }],\n      search: ''\n    };\n  },\n  methods: {\n    add(newList) {\n      this.lists.push(newList);\n    },\n    remove(list) {\n      this.lists = this.lists.filter(l => l.id !== list.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchLists() {\n      try {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit);\n        console.log(response);\n        this.lists = response.data;\n      } catch {\n        alert('пизда');\n      }\n    }\n  },\n  mounted() {\n    this.fetchLists();\n  },\n  computed: {\n    sortedLists() {\n      return [...this.lists].sort((list1, list2) => list1[this.selectedSort]?.localeCompare(list2[this.selectedSort]));\n    },\n    searchedAndSortLists() {\n      return this.sortedLists.filter(list => list.title.toLowerCase().includes(this.search.toLowerCase()));\n    }\n  },\n  watch: {}\n};","map":{"version":3,"names":["PostList","PostForm","axios","components","data","lists","dialogVisible","selectedSort","page","limit","maxLists","sortOptions","value","name","search","methods","add","newList","push","remove","list","filter","l","id","showDialog","fetchLists","response","get","params","_page","_limit","Math","ceil","headers","console","log","alert","mounted","computed","sortedLists","sort","list1","list2","localeCompare","searchedAndSortLists","title","toLowerCase","includes","watch"],"sources":["/run/media/sledge/Base/programs/Vue_Try/src/App.vue"],"sourcesContent":["<template>\n    <div>\n        <my-input\n        v-model=\"search\"\n        placeholder=\"Поиск\"\n         >\n        </my-input>\n\n        <div class=\"buttons\">\n            <first-Button\n            @click=\"showDialog\"\n            >Создать пост</first-Button>\n            <my-select \n            v-model=\"selectedSort\"\n            :options=\"sortOptions\"\n            >\n\n            </my-select>\n        </div>\n        <my-dialog v-model:show=\"dialogVisible\">\n            <post-form \n                @getPost=\"add\"\n            />\n        </my-dialog>\n        <post-list :lists=\"searchedAndSortLists\" @remove=\"remove\"/>\n        <div class=\"wrapper_page\">\n            <div class=\"page\" v-for=\"page in maxLists\">{{ page }}</div>\n        </div>\n    </div>\n</template>\n<script>\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\nimport axios from \"axios\"\n\nexport default {\n    components: {\n        PostList, PostForm,\n    },\n    data() {\n        return {\n            lists: [],\n            dialogVisible: false,\n            selectedSort: '',\n            page:1,\n            limit:10,\n            maxLists:0,\n            sortOptions: [\n                {value: 'title', name: 'По названию'},\n                {value: 'body', name: 'По содержимому'}\n            ],\n            search: '',\n        }\n    },\n    methods: {\n        add(newList) {\n            this.lists.push(newList);\n        },\n        remove(list) {\n            this.lists = this.lists.filter(l => l.id !== list.id);\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchLists() {\n\n            try {\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n                    params: {\n                        _page: this.page,\n                        _limit: this.limit,\n                    }\n                });\n                this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit)\n                console.log(response)\n                this.lists = response.data\n            }catch {\n                alert('пизда')\n            }\n            \n        }\n    },\n    mounted() {\n        this.fetchLists();\n    },\n    computed: {\n        sortedLists() {\n            return [...this.lists].sort((list1,list2) =>  list1[this.selectedSort]?.localeCompare(list2[this.selectedSort]))\n        },\n        searchedAndSortLists() {\n            return this.sortedLists.filter(list => list.title.toLowerCase().includes(this.search.toLowerCase()))\n        }\n    },\n    watch: {\n\n    }\n}\n</script>\n\n<style>\n* {\n    margin:0;\n    padding:0;\n}\nbody {\n    padding: 20px;\n}\n.buttons {\n    display: flex;\n    justify-content: space-between;\n}\n.wrapper_page {\n    display: flex;\n    margin-top: 20px;\n}\n.page {\n    border:1px solid black ;\n    padding: 10px;\n}\n</style>"],"mappings":";AA+BA,OAAOA,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,QAAO,MAAO,uBAAuB;AAC5C,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,UAAU,EAAE;IACRH,QAAQ;IAAEC;EACd,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,KAAK;MACpBC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAC,CAAC;MACNC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC,CAAC;MACVC,WAAW,EAAE,CACT;QAACC,KAAK,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAa,CAAC,EACrC;QAACD,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAgB,EACzC;MACDC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,GAAGA,CAACC,OAAO,EAAE;MACT,IAAI,CAACZ,KAAK,CAACa,IAAI,CAACD,OAAO,CAAC;IAC5B,CAAC;IACDE,MAAMA,CAACC,IAAI,EAAE;MACT,IAAI,CAACf,KAAI,GAAI,IAAI,CAACA,KAAK,CAACgB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAMH,IAAI,CAACG,EAAE,CAAC;IACzD,CAAC;IACDC,UAAUA,CAAA,EAAG;MACT,IAAI,CAAClB,aAAY,GAAI,IAAI;IAC7B,CAAC;IACD,MAAMmB,UAAUA,CAAA,EAAG;MAEf,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMxB,KAAK,CAACyB,GAAG,CAAC,4CAA4C,EAAE;UAC3EC,MAAM,EAAE;YACJC,KAAK,EAAE,IAAI,CAACrB,IAAI;YAChBsB,MAAM,EAAE,IAAI,CAACrB;UACjB;QACJ,CAAC,CAAC;QACF,IAAI,CAACC,QAAO,GAAIqB,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,eAAe,IAAI,IAAI,CAACxB,KAAK;QACxEyB,OAAO,CAACC,GAAG,CAACT,QAAQ;QACpB,IAAI,CAACrB,KAAI,GAAIqB,QAAQ,CAACtB,IAAG;MAC7B,CAAC,OAAM;QACHgC,KAAK,CAAC,OAAO;MACjB;IAEJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACZ,UAAU,CAAC,CAAC;EACrB,CAAC;EACDa,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,OAAO,CAAC,GAAG,IAAI,CAAClC,KAAK,CAAC,CAACmC,IAAI,CAAC,CAACC,KAAK,EAACC,KAAK,KAAMD,KAAK,CAAC,IAAI,CAAClC,YAAY,CAAC,EAAEoC,aAAa,CAACD,KAAK,CAAC,IAAI,CAACnC,YAAY,CAAC,CAAC;IACnH,CAAC;IACDqC,oBAAoBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACL,WAAW,CAAClB,MAAM,CAACD,IAAG,IAAKA,IAAI,CAACyB,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACjC,MAAM,CAACgC,WAAW,CAAC,CAAC,CAAC;IACvG;EACJ,CAAC;EACDE,KAAK,EAAE,CAEP;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}