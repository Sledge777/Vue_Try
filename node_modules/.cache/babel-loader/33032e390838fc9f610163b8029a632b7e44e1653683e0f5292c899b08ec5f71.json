{"ast":null,"code":"import { resolveComponent as _resolveComponent, resolveDirective as _resolveDirective, createVNode as _createVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _directive_focus = _resolveDirective(\"focus\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_withDirectives(_createVNode(_component_my_input, {\n    modelValue: $data.newList.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newList.title = $event),\n    type: \"text\",\n    placeholder: \"title\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), [[_directive_focus]]), _createVNode(_component_my_input, {\n    modelValue: $data.newList.body,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newList.body = $event),\n    type: \"text\",\n    placeholder: \"description\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_first_Button, {\n    style: {\n      \"margin-top\": \"10px\"\n    },\n    onClick: $options.add\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementBlock","onSubmit","_cache","_withModifiers","_createVNode","_component_my_input","$data","newList","title","$event","type","placeholder","body","_component_first_Button","style","onClick","$options","add"],"sources":["C:\\Users\\bogda\\Downloads\\Vue_Try\\src\\components\\PostForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent>\r\n        <my-input \r\n        v-focus\r\n        v-model=\"newList.title\"\r\n        type=\"text\" \r\n        placeholder=\"title\"/>\r\n        <my-input \r\n        v-model=\"newList.body\"\r\n        type=\"text\" \r\n        placeholder=\"description\"/>\r\n        <first-Button\r\n        style=\"margin-top: 10px;\"\r\n        @click=\"add\"\r\n        >Создать</first-Button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            newList: {\r\n                title: '',\r\n                body: '', \r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        takeTitle(event) {\r\n            this.newLists.title = event.target.value\r\n        },\r\n        takeDescription(event) {\r\n            this.newLists.body = event.target.value\r\n        // или так: @input = \" newLists.description = $event.target.value\"\r\n        },\r\n        add() {\r\n            this.newList.id = Date.now();\r\n            this.$emit('getPost',this.newList)\r\n            this.newList = {\r\n                title: '',\r\n                body: ''\r\n            }\r\n        }\r\n    }\r\n}\r\n    \r\n</script>\r\n\r\n<style scoped>\r\n\r\nform {\r\n    display:flex;\r\n    flex-direction: column;\r\n}\r\n</style>"],"mappings":";;;;;uBACIA,mBAAA,CAcO;IAdAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAP,QAAe;sBACjBC,YAAA,CAIqBC,mBAAA;gBAFZC,KAAA,CAAAC,OAAO,CAACC,KAAK;+DAAbF,KAAA,CAAAC,OAAO,CAACC,KAAK,GAAAC,MAAA;IACtBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;kEACZP,YAAA,CAG2BC,mBAAA;gBAFlBC,KAAA,CAAAC,OAAO,CAACK,IAAI;+DAAZN,KAAA,CAAAC,OAAO,CAACK,IAAI,GAAAH,MAAA;IACrBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;2CACZP,YAAA,CAGuBS,uBAAA;IAFvBC,KAAyB,EAAzB;MAAA;IAAA,CAAyB;IACxBC,OAAK,EAAEC,QAAA,CAAAC;;sBACP,MAAO,C,iBAAP,SAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}