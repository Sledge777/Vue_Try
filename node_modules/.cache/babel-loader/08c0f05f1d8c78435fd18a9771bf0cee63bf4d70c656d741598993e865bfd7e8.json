{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_first_Button, {\n    onClick: $options.fetchLists,\n    style: {\n      \"margin-right\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Получить посты\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_first_Button, {\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[0] || (_cache[0] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onGetPost: $options.add\n    }, null, 8 /* PROPS */, [\"onGetPost\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_post_list, {\n    lists: $data.lists,\n    onRemove: $options.remove\n  }, null, 8 /* PROPS */, [\"lists\", \"onRemove\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_first_Button","onClick","$options","fetchLists","style","showDialog","_component_my_dialog","show","$data","dialogVisible","$event","_component_post_form","onGetPost","add","_component_post_list","lists","onRemove","remove"],"sources":["/run/media/sledge/Base/programs/Vue_Try/src/App.vue"],"sourcesContent":["<template>\n    <div>\n        <first-Button @click=\"fetchLists\" style=\"margin-right: 10px;\">Получить посты</first-Button>\n        <first-Button\n        @click=\"showDialog\"\n        >Создать пост</first-Button>\n        <my-dialog v-model:show=\"dialogVisible\">\n            <post-form \n                @getPost=\"add\"\n            />\n        </my-dialog>\n        <post-list :lists=\"lists\" @remove=\"remove\"/>\n    </div>\n</template>\n<script>\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\nimport axios from \"axios\"\n\nexport default {\n    components: {\n        PostList, PostForm,\n    },\n    data() {\n        return {\n            lists: [],\n        dialogVisible: false,\n        }\n    },\n    methods: {\n        add(newList) {\n            this.lists.push(newList);\n        },\n        remove(list) {\n            this.lists = this.lists.filter(l => l.id !== list.id);\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchLists() {\n            try {\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n                console.log(response)\n                this.lists = response.data\n            }catch {\n                alert('пизда')\n            }\n            \n        }\n    }\n}\n</script>\n\n<style>\n* {\n    margin:0;\n    padding:0;\n}\nbody {\n    padding: 20px;\n}\n</style>"],"mappings":";;;;;;uBACIA,mBAAA,CAWM,cAVFC,YAAA,CAA2FC,uBAAA;IAA5EC,OAAK,EAAEC,QAAA,CAAAC,UAAU;IAAEC,KAA2B,EAA3B;MAAA;IAAA;;sBAA4B,MAAc,C,iBAAd,gBAAc,E;;kCAC5EL,YAAA,CAE4BC,uBAAA;IAD3BC,OAAK,EAAEC,QAAA,CAAAG;EAAU;sBACjB,MAAY,C,iBAAZ,cAAY,E;;kCACbN,YAAA,CAIYO,oBAAA;IAJOC,IAAI,EAAEC,KAAA,CAAAC,aAAa;yDAAbD,KAAA,CAAAC,aAAa,GAAAC,MAAA;;sBAClC,MAEE,CAFFX,YAAA,CAEEY,oBAAA;MADGC,SAAO,EAAEV,QAAA,CAAAW;IAAG,uC;;+BAGrBd,YAAA,CAA4Ce,oBAAA;IAAhCC,KAAK,EAAEP,KAAA,CAAAO,KAAK;IAAGC,QAAM,EAAEd,QAAA,CAAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}