{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"buttons\"\n};\nconst _hoisted_2 = {\n  class: \"wrapper_page\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  ref: \"observer\",\n  class: \"observe\"\n};\nexport function render(_ctx, _cache) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_my_input, {\n    modelValue: _ctx.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.search = $event),\n    placeholder: \"Поиск\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_first_Button, {\n    onClick: _ctx.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: _ctx.selectedSort,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectedSort = $event),\n    options: _ctx.sortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: _ctx.dialogVisible,\n    \"onUpdate:show\": _cache[2] || (_cache[2] = $event => _ctx.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onGetPost: _ctx.add\n    }, null, 8 /* PROPS */, [\"onGetPost\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_post_list, {\n    lists: _ctx.searchedAndSortLists,\n    onRemove: _ctx.remove\n  }, null, 8 /* PROPS */, [\"lists\", \"onRemove\"]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.maxLists, pageNum => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"page\", {\n        'selected_page': this.page === pageNum\n      }]),\n      key: pageNum,\n      onClick: $event => _ctx.changePage(pageNum)\n    }, _toDisplayString(pageNum), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_createVNode","_component_my_input","_ctx","search","$event","placeholder","_createElementVNode","_hoisted_1","_component_first_Button","onClick","showDialog","_component_my_select","selectedSort","options","sortOptions","_component_my_dialog","show","dialogVisible","_component_post_form","onGetPost","add","_component_post_list","lists","searchedAndSortLists","onRemove","remove","_hoisted_2","_Fragment","_renderList","maxLists","pageNum","_normalizeClass","page","key","changePage","_hoisted_3","_hoisted_4"],"sources":["/run/media/sledge/Base/programs/Vue_Try/src/App.vue"],"sourcesContent":["<template>\n    <div>\n        <my-input\n        v-model=\"search\"\n        placeholder=\"Поиск\"\n         >\n        </my-input>\n\n        <div class=\"buttons\">\n            <first-Button\n            @click=\"showDialog\"\n            >Создать пост</first-Button>\n            <my-select \n            v-model=\"selectedSort\"\n            :options=\"sortOptions\"\n            >\n\n            </my-select>\n        </div>\n        <my-dialog v-model:show=\"dialogVisible\">\n            <post-form \n                @getPost=\"add\"\n            />\n        </my-dialog>\n        <post-list :lists=\"searchedAndSortLists\" @remove=\"remove\"/>\n        <div class=\"wrapper_page\">\n            <div \n            class=\"page\" \n            v-for=\"pageNum in maxLists\" \n            :key=\"pageNum\"\n            :class=\"{\n                'selected_page': this.page === pageNum\n            }\"\n            @click=\"changePage(pageNum)\"\n            >{{ pageNum }}</div>\n        </div>\n        <div ref=\"observer\" class=\"observe\"></div>\n    </div>\n</template>\n<script>\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\nimport axios from \"axios\"\n\nexport default {\n    components: {\n        PostList, PostForm,\n    },\n    data() {\n        return {\n            lists: [],\n            dialogVisible: false,\n            selectedSort: '',\n            page:1,\n            limit:10,\n            maxLists:0,\n            sortOptions: [\n                {value: 'title', name: 'По названию'},\n                {value: 'body', name: 'По содержимому'}\n            ],\n            search: '',\n        }\n    },\n    methods: {\n        add(newList) {\n            this.lists.push(newList);\n        },\n        remove(list) {\n            this.lists = this.lists.filter(l => l.id !== list.id);\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchLists() {\n\n            try {\n                page = page += 1,\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n                    params: {\n                        _page: this.page,\n                        _limit: this.limit,\n                    }\n                });\n                this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit)\n                this.lists = [...this.lists, ...response.data]\n            }catch {\n                alert('пизда')\n            }\n            \n        },\n        changePage(pageNum) {\n            this.page = pageNum\n            this.fetchLists()\n        }\n    },\n    mounted() {\n        this.fetchLists();\n        const options = {\n            rootMargin: \"0px\",\n            threshold: 1.0,\n        };\n\n        const callback = (entries, observer) => {\n            if (entries[0].isIntersecting) {\n               this.fetchLists()\n            }\n            \n        };\n\n        const observer = new IntersectionObserver(callback, options);\n        observer.observe(this.$refs.observer)\n\n    },\n    computed: {\n        sortedLists() {\n            return [...this.lists].sort((list1,list2) =>  list1[this.selectedSort]?.localeCompare(list2[this.selectedSort]))\n        },\n        searchedAndSortLists() {\n            return this.sortedLists.filter(list => list.title.toLowerCase().includes(this.search.toLowerCase()))\n        },\n        \n    },\n    watch: {\n        // page() {\n        //    this.fetchLists\n        // } \n    }\n}\n</script>\n\n<style>\n* {\n    margin:0;\n    padding:0;\n}\nbody {\n    padding: 20px;\n}\n.buttons {\n    display: flex;\n    justify-content: space-between;\n}\n.wrapper_page {\n    display: flex;\n    margin-top: 20px;\n}\n.page {\n    border:1px solid black ;\n    padding: 10px;\n}\n.selected_page {\n    border:2px solid green;\n}\n.observe {\n    height: 30px;\n}\n</style>"],"mappings":";;EAQaA,KAAK,EAAC;AAAS;;EAiBfA,KAAK,EAAC;AAAc;;;EAWpBC,GAAG,EAAC,UAAU;EAACD,KAAK,EAAC;;;;;;;;;uBAnC9BE,mBAAA,CAoCM,cAnCFC,YAAA,CAIWC,mBAAA;gBAHFC,IAAA,CAAAC,MAAM;+DAAND,IAAA,CAAAC,MAAM,GAAAC,MAAA;IACfC,WAAW,EAAC;2CAIZC,mBAAA,CAUM,OAVNC,UAUM,GATFP,YAAA,CAE4BQ,uBAAA;IAD3BC,OAAK,EAAEP,IAAA,CAAAQ;EAAU;sBACjB,MAAY,C,iBAAZ,cAAY,E;;kCACbV,YAAA,CAKYW,oBAAA;gBAJHT,IAAA,CAAAU,YAAY;+DAAZV,IAAA,CAAAU,YAAY,GAAAR,MAAA;IACpBS,OAAO,EAAEX,IAAA,CAAAY;wDAKdd,YAAA,CAIYe,oBAAA;IAJOC,IAAI,EAAEd,IAAA,CAAAe,aAAa;yDAAbf,IAAA,CAAAe,aAAa,GAAAb,MAAA;;sBAClC,MAEE,CAFFJ,YAAA,CAEEkB,oBAAA;MADGC,SAAO,EAAEjB,IAAA,CAAAkB;IAAG,uC;;+BAGrBpB,YAAA,CAA2DqB,oBAAA;IAA/CC,KAAK,EAAEpB,IAAA,CAAAqB,oBAAoB;IAAGC,QAAM,EAAEtB,IAAA,CAAAuB;kDAClDnB,mBAAA,CAUM,OAVNoB,UAUM,I,kBATF3B,mBAAA,CAQoB4B,SAAA,QAAAC,WAAA,CANF1B,IAAA,CAAA2B,QAAQ,EAAnBC,OAAO;yBAFd/B,mBAAA,CAQoB;MAPpBF,KAAK,EAAAkC,eAAA,EAAC,MAAM;8BAGoCC,IAAI,KAAKF;;MADxDG,GAAG,EAAEH,OAAO;MAIZrB,OAAK,EAAAL,MAAA,IAAEF,IAAA,CAAAgC,UAAU,CAACJ,OAAO;wBACtBA,OAAO,gCAAAK,UAAA;oCAEf7B,mBAAA,CAA0C,OAA1C8B,UAA0C,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}