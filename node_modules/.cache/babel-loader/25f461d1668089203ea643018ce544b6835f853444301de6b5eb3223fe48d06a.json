{"ast":null,"code":"// import PostList from \"@/components/PostList\";\n// import PostForm from \"@/components/PostForm\";\n// import axios from \"axios\"\n\nexport default {\n  components: {\n    // PostList, PostForm,\n  },\n  data() {\n    // return {\n    //     lists: [],\n    //     dialogVisible: false,\n    //     selectedSort: '',\n    //     page:0,\n    //     limit:10,\n    //     maxLists:0,\n    //     sortOptions: [\n    //         {value: 'title', name: 'По названию'},\n    //         {value: 'body', name: 'По содержимому'}\n    //     ],\n    //     search: '',\n    // }\n  },\n  methods: {\n    // add(newList) {\n    //     this.lists.push(newList);\n    // },\n    // remove(list) {\n    //     this.lists = this.lists.filter(l => l.id !== list.id);\n    // },\n    // showDialog() {\n    //     this.dialogVisible = true;\n    // },\n    // async fetchLists() {\n\n    //     try {\n    //         this.page += 1;\n    //         const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n    //             params: {\n    //                 _page: this.page,\n    //                 _limit: this.limit,\n    //             }\n    //         });\n    //         this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit)\n    //         this.lists = [...this.lists, ...response.data]\n\n    //     }catch {\n    //         alert('пизда')\n    //     }\n\n    // },\n    // changePage(pageNum) {\n    //     this.page = pageNum\n    //     this.fetchLists()\n    // }\n  },\n  mounted() {\n    // this.fetchLists();\n  },\n  computed: {},\n  watch: {\n    // page() {\n    //    this.fetchLists\n    // } \n  }\n};","map":{"version":3,"names":["components","data","methods","mounted","computed","watch"],"sources":["C:\\Users\\bogda\\Downloads\\Vue_Try\\src\\pages\\ListsWithVuex.vue"],"sourcesContent":["<template>\r\n    <div>{{ $store.state.list.limit }}</div>\r\n    {{ $store.commit('setMaxLists') }}\r\n    <!-- <div>\r\n        <my-input\r\n        v-model=\"search\"\r\n        placeholder=\"Поиск\"\r\n        v-focus\r\n        >\r\n        </my-input>\r\n\r\n        <div class=\"buttons\">\r\n            <first-Button\r\n            @click=\"showDialog\"\r\n            style=\"margin-top: 10px;\"\r\n            >Создать пост</first-Button>\r\n            <my-select \r\n            v-model=\"selectedSort\"\r\n            :options=\"sortOptions\"\r\n            >\r\n\r\n            </my-select>\r\n        </div>\r\n        <my-dialog v-model:show=\"dialogVisible\">\r\n            <post-form \r\n                @getPost=\"add\"\r\n            />\r\n        </my-dialog>\r\n        <post-list :lists=\"searchedAndSortLists\" @remove=\"remove\"/>\r\n        <div class=\"wrapper_page\">\r\n            <div \r\n            class=\"page\" \r\n            v-for=\"pageNum in maxLists\" \r\n            :key=\"pageNum\"\r\n            :class=\"{\r\n                'selected_page': this.page === pageNum\r\n            }\"\r\n            @click=\"changePage(pageNum)\"\r\n            >{{ pageNum }}</div>\r\n        </div>\r\n        <div v-intersection=\"fetchLists\" class=\"observe\"></div>\r\n    </div> -->\r\n</template>\r\n<script>\r\n// import PostList from \"@/components/PostList\";\r\n// import PostForm from \"@/components/PostForm\";\r\n// import axios from \"axios\"\r\n\r\nexport default {\r\n    components: {\r\n        // PostList, PostForm,\r\n    },\r\n    data() {\r\n        // return {\r\n        //     lists: [],\r\n        //     dialogVisible: false,\r\n        //     selectedSort: '',\r\n        //     page:0,\r\n        //     limit:10,\r\n        //     maxLists:0,\r\n        //     sortOptions: [\r\n        //         {value: 'title', name: 'По названию'},\r\n        //         {value: 'body', name: 'По содержимому'}\r\n        //     ],\r\n        //     search: '',\r\n        // }\r\n    },\r\n    methods: {\r\n        // add(newList) {\r\n        //     this.lists.push(newList);\r\n        // },\r\n        // remove(list) {\r\n        //     this.lists = this.lists.filter(l => l.id !== list.id);\r\n        // },\r\n        // showDialog() {\r\n        //     this.dialogVisible = true;\r\n        // },\r\n        // async fetchLists() {\r\n\r\n        //     try {\r\n        //         this.page += 1;\r\n        //         const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n        //             params: {\r\n        //                 _page: this.page,\r\n        //                 _limit: this.limit,\r\n        //             }\r\n        //         });\r\n        //         this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n        //         this.lists = [...this.lists, ...response.data]\r\n\r\n        //     }catch {\r\n        //         alert('пизда')\r\n        //     }\r\n            \r\n        // },\r\n        // changePage(pageNum) {\r\n        //     this.page = pageNum\r\n        //     this.fetchLists()\r\n        // }\r\n    },\r\n    mounted() {\r\n        // this.fetchLists();\r\n       \r\n\r\n    },\r\n    computed: {\r\n       \r\n        \r\n    },\r\n    watch: {\r\n        // page() {\r\n        //    this.fetchLists\r\n        // } \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n    padding: 20px;\r\n}\r\n.buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.wrapper_page {\r\n    display: flex;\r\n    margin-top: 20px;\r\n}\r\n.page {\r\n    border:1px solid black ;\r\n    padding: 10px;\r\n}\r\n.selected_page {\r\n    border:2px solid green;\r\n}\r\n.observe {\r\n    height: 30px;\r\n}\r\n</style>"],"mappings":"AA4CA;AACA;AACA;;AAEA,eAAe;EACXA,UAAU,EAAE;IACR;EAAA,CACH;EACDC,IAAIA,CAAA,EAAG;IACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;EAAA,CACH;EACDC,OAAOA,CAAA,EAAG;IACN;EAAA,CAGH;EACDC,QAAQ,EAAE,CAGV,CAAC;EACDC,KAAK,EAAE;IACH;IACA;IACA;EAAA;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}