{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_first_Button, null, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[0] || (_cache[0] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onGetPost: $options.add\n    }, null, 8 /* PROPS */, [\"onGetPost\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_post_list, {\n    lists: $data.lists,\n    onRemove: $options.remove\n  }, null, 8 /* PROPS */, [\"lists\", \"onRemove\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_first_Button","_component_my_dialog","show","$data","dialogVisible","$event","_component_post_form","onGetPost","$options","add","_component_post_list","lists","onRemove","remove"],"sources":["/run/media/sledge/Base/programs/ara_test/test/src/App.vue"],"sourcesContent":["<template>\n    <div>\n        <first-Button>Создать пост</first-Button>\n        <my-dialog v-model:show=\"dialogVisible\">\n            <post-form \n                @getPost=\"add\"\n            />\n        </my-dialog>\n        \n        <post-list :lists=\"lists\" @remove=\"remove\"/>\n    </div>\n</template>\n<script>\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\n\nexport default {\n    components: {\n        PostList, PostForm,\n    },\n    data() {\n        return {\n            lists: [\n            {id:1, title:'ara, pizda', description: 'post about pixda'},\n            {id:2, title:'ara, pizda', description: 'post about pixda'},\n            {id:3, title:'ara, pizda', description: 'post about pixda'},\n        ],\n        dialogVisible: false,\n        }\n    },\n    methods: {\n        add(newList) {\n            this.lists.push(newList);\n        },\n        remove(list) {\n            this.lists = this.lists.filter(l => l.id !== list.id);\n        }\n    }\n}\n</script>\n\n<style>\n* {\n    margin:0;\n    padding:0;\n}\nbody {\n    padding: 20px;\n}\n</style>"],"mappings":";;;;;;uBACIA,mBAAA,CASM,cARFC,YAAA,CAAyCC,uBAAA;sBAA3B,MAAY,C,iBAAZ,cAAY,E;;MAC1BD,YAAA,CAIYE,oBAAA;IAJOC,IAAI,EAAEC,KAAA,CAAAC,aAAa;yDAAbD,KAAA,CAAAC,aAAa,GAAAC,MAAA;;sBAClC,MAEE,CAFFN,YAAA,CAEEO,oBAAA;MADGC,SAAO,EAAEC,QAAA,CAAAC;IAAG,uC;;+BAIrBV,YAAA,CAA4CW,oBAAA;IAAhCC,KAAK,EAAER,KAAA,CAAAQ,KAAK;IAAGC,QAAM,EAAEJ,QAAA,CAAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}