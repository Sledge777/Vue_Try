{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_first_Button, {\n    onClick: $options.showDialog\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: $data.selectedSort,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedSort = $event),\n    options: $data.sortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[1] || (_cache[1] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onGetPost: $options.add\n    }, null, 8 /* PROPS */, [\"onGetPost\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_post_list, {\n    lists: $options.sortedLists,\n    onRemove: $options.remove\n  }, null, 8 /* PROPS */, [\"lists\", \"onRemove\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_createVNode","_component_first_Button","onClick","$options","showDialog","_component_my_select","$data","selectedSort","$event","options","sortOptions","_component_my_dialog","show","dialogVisible","_component_post_form","onGetPost","add","_component_post_list","lists","sortedLists","onRemove","remove"],"sources":["/run/media/sledge/Base/programs/Vue_Try/src/App.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"buttons\">\n            <first-Button\n            @click=\"showDialog\"\n            >Создать пост</first-Button>\n            <my-select \n            v-model=\"selectedSort\"\n            :options=\"sortOptions\"\n            >\n\n            </my-select>\n        </div>\n        <my-dialog v-model:show=\"dialogVisible\">\n            <post-form \n                @getPost=\"add\"\n            />\n        </my-dialog>\n        <post-list :lists=\"sortedLists\" @remove=\"remove\"/>\n    </div>\n</template>\n<script>\nimport PostList from \"@/components/PostList\";\nimport PostForm from \"@/components/PostForm\";\nimport axios from \"axios\"\n\nexport default {\n    components: {\n        PostList, PostForm,\n    },\n    data() {\n        return {\n            lists: [],\n            dialogVisible: false,\n            selectedSort: '',\n            sortOptions: [\n                {value: 'title', name: 'По названию'},\n                {value: 'body', name: 'По содержимому'}\n            ]\n        }\n    },\n    methods: {\n        add(newList) {\n            this.lists.push(newList);\n        },\n        remove(list) {\n            this.lists = this.lists.filter(l => l.id !== list.id);\n        },\n        showDialog() {\n            this.dialogVisible = true;\n        },\n        async fetchLists() {\n\n            try {\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts?_limit=10');\n                console.log(response)\n                this.lists = response.data\n            }catch {\n                alert('пизда')\n            }\n            \n        }\n    },\n    mounted() {\n        this.fetchLists();\n    },\n    computed: {\n        sortedLists() {\n            return [...this.list].sort((list1,list2) => {return list1[this.selectedSort]?.localeCompare(list2[this.selectedSort])})\n        }\n    },\n    watch: {\n        \n    }\n}\n</script>\n\n<style>\n* {\n    margin:0;\n    padding:0;\n}\nbody {\n    padding: 20px;\n}\n.buttons {\n    display: flex;\n    justify-content: space-between;\n}\n</style>"],"mappings":";;EAEaA,KAAK,EAAC;AAAS;;;;;;;uBADxBC,mBAAA,CAkBM,cAjBFC,mBAAA,CAUM,OAVNC,UAUM,GATFC,YAAA,CAE4BC,uBAAA;IAD3BC,OAAK,EAAEC,QAAA,CAAAC;EAAU;sBACjB,MAAY,C,iBAAZ,cAAY,E;;kCACbJ,YAAA,CAKYK,oBAAA;gBAJHC,KAAA,CAAAC,YAAY;+DAAZD,KAAA,CAAAC,YAAY,GAAAC,MAAA;IACpBC,OAAO,EAAEH,KAAA,CAAAI;wDAKdV,YAAA,CAIYW,oBAAA;IAJOC,IAAI,EAAEN,KAAA,CAAAO,aAAa;yDAAbP,KAAA,CAAAO,aAAa,GAAAL,MAAA;;sBAClC,MAEE,CAFFR,YAAA,CAEEc,oBAAA;MADGC,SAAO,EAAEZ,QAAA,CAAAa;IAAG,uC;;+BAGrBhB,YAAA,CAAkDiB,oBAAA;IAAtCC,KAAK,EAAEf,QAAA,CAAAgB,WAAW;IAAGC,QAAM,EAAEjB,QAAA,CAAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}