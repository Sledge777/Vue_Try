{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-20c887b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Создать\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newLists.title = $event),\n    type: \"text\",\n    placeholder: \"title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newLists.title]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newLists.description = $event),\n    type: \"text\",\n    placeholder: \"description\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newLists.description]]), _hoisted_1], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","onSubmit","_cache","_withModifiers","$data","newLists","title","$event","type","placeholder","description","_hoisted_1"],"sources":["/run/media/sledge/Base/programs/ara_test/test/src/components/PostForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent>\n        <input \n        v-model=\"newLists.title\"\n        type=\"text\" \n        placeholder=\"title\">\n        <input \n        v-model=\"newLists.description\"\n        type=\"text\" \n        placeholder=\"description\">\n        <button \n        >Создать</button>\n    </form>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            newLists: {\n                title: '',\n                description: '', \n            }\n        }\n    },\n    methods: {\n        takeTitle(event) {\n            this.newLists.title = event.target.value\n        },\n        takeDescription(event) {\n            this.newLists.description = event.target.value\n        // или так: @input = \" newLists.description = $event.target.value\"\n        },\n    }\n}\n    \n</script>\n\n<style scoped>\ninput {\n    border: 2px solid green;\n    padding: 20px;\n    margin-top: 10px;\n}\nbutton {\n    align-self: self-end;\n    background-color: #fff;\n    padding: 10px;\n    color: green;\n    border: 2px solid green;\n    margin-top:10px;\n}\nform {\n    display:flex;\n    flex-direction: column;\n}\n</style>"],"mappings":";;gEAUQA,mBAAA,CACiB,gBAAhB,SAAO;;;uBAVZC,mBAAA,CAWO;IAXAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAP,QAAe;sBACjBJ,mBAAA,CAGoB;+DAFXK,KAAA,CAAAC,QAAQ,CAACC,KAAK,GAAAC,MAAA;IACvBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHL,KAAA,CAAAC,QAAQ,CAACC,KAAK,E,mBAGvBP,mBAAA,CAG0B;+DAFjBK,KAAA,CAAAC,QAAQ,CAACK,WAAW,GAAAH,MAAA;IAC7BC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHL,KAAA,CAAAC,QAAQ,CAACK,WAAW,E,GAG7BC,UACiB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}