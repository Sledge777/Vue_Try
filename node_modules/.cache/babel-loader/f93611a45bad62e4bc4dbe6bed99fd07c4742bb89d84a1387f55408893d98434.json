{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_createVNode(_component_my_input, {\n    modelValue: $data.newList.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newList.title = $event),\n    type: \"text\",\n    placeholder: \"title\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_my_input, {\n    modelValue: $data.newList.description,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newList.description = $event),\n    type: \"text\",\n    placeholder: \"description\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_first_Button, {\n    onClick: $options.add\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementBlock","onSubmit","_cache","_withModifiers","_createVNode","_component_my_input","$data","newList","title","$event","type","placeholder","description","_component_first_Button","onClick","$options","add"],"sources":["/run/media/sledge/Base/programs/Vue_Try/src/components/PostForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent>\n        <my-input \n        v-model=\"newList.title\"\n        type=\"text\" \n        placeholder=\"title\"/>\n        <my-input \n        v-model=\"newList.description\"\n        type=\"text\" \n        placeholder=\"description\"/>\n        <first-Button\n        @click=\"add\"\n        >Создать</first-Button>\n    </form>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            newList: {\n                title: '',\n                body: '', \n            }\n        }\n    },\n    methods: {\n        takeTitle(event) {\n            this.newLists.title = event.target.value\n        },\n        takeDescription(event) {\n            this.newLists.body = event.target.value\n        // или так: @input = \" newLists.description = $event.target.value\"\n        },\n        add() {\n            this.newList.id = Date.now();\n            this.$emit('getPost',this.newList)\n            this.newList = {\n                title: '',\n                body: ''\n            }\n        }\n    }\n}\n    \n</script>\n\n<style scoped>\n\nform {\n    display:flex;\n    flex-direction: column;\n}\n</style>"],"mappings":";;;;uBACIA,mBAAA,CAYO;IAZAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAP,QAAe;MACjBC,YAAA,CAGqBC,mBAAA;gBAFZC,KAAA,CAAAC,OAAO,CAACC,KAAK;+DAAbF,KAAA,CAAAC,OAAO,CAACC,KAAK,GAAAC,MAAA;IACtBC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;2CACZP,YAAA,CAG2BC,mBAAA;gBAFlBC,KAAA,CAAAC,OAAO,CAACK,WAAW;+DAAnBN,KAAA,CAAAC,OAAO,CAACK,WAAW,GAAAH,MAAA;IAC5BC,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;2CACZP,YAAA,CAEuBS,uBAAA;IADtBC,OAAK,EAAEC,QAAA,CAAAC;EAAG;sBACV,MAAO,C,iBAAP,SAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}