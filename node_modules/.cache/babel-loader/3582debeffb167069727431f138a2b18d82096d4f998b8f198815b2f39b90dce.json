{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3400f921\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"buttons\"\n};\nconst _hoisted_2 = {\n  class: \"wrapper_page\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"observe\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  const _component_first_Button = _resolveComponent(\"first-Button\");\n  const _component_my_select = _resolveComponent(\"my-select\");\n  const _component_post_form = _resolveComponent(\"post-form\");\n  const _component_my_dialog = _resolveComponent(\"my-dialog\");\n  const _component_post_list = _resolveComponent(\"post-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_my_input, {\n    modelValue: $data.search,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    placeholder: \"Поиск\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_first_Button, {\n    onClick: $options.showDialog,\n    style: {\n      \"margin-top\": \"10px\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать пост\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_my_select, {\n    modelValue: $data.selectedSort,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedSort = $event),\n    options: $data.sortOptions\n  }, null, 8 /* PROPS */, [\"modelValue\", \"options\"])]), _createVNode(_component_my_dialog, {\n    show: $data.dialogVisible,\n    \"onUpdate:show\": _cache[2] || (_cache[2] = $event => $data.dialogVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_post_form, {\n      onGetPost: $options.add\n    }, null, 8 /* PROPS */, [\"onGetPost\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_post_list, {\n    lists: $options.searchedAndSortLists,\n    onRemove: $options.remove\n  }, null, 8 /* PROPS */, [\"lists\", \"onRemove\"]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.maxLists, pageNum => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"page\", {\n        'selected_page': this.page === pageNum\n      }]),\n      key: pageNum,\n      onClick: $event => $options.changePage(pageNum)\n    }, _toDisplayString(pageNum), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_4]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_my_input","$data","search","$event","placeholder","_hoisted_1","_component_first_Button","onClick","$options","showDialog","style","_component_my_select","selectedSort","options","sortOptions","_component_my_dialog","show","dialogVisible","_component_post_form","onGetPost","add","_component_post_list","lists","searchedAndSortLists","onRemove","remove","_hoisted_2","_Fragment","_renderList","maxLists","pageNum","_normalizeClass","page","key","changePage","_hoisted_3","_hoisted_4"],"sources":["C:\\Users\\bogda\\Downloads\\Vue_Try\\src\\pages\\Lists.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <my-input\r\n        v-model=\"search\"\r\n        placeholder=\"Поиск\"\r\n         >\r\n        </my-input>\r\n\r\n        <div class=\"buttons\">\r\n            <first-Button\r\n            @click=\"showDialog\"\r\n            style=\"margin-top: 10px;\"\r\n            >Создать пост</first-Button>\r\n            <my-select \r\n            v-model=\"selectedSort\"\r\n            :options=\"sortOptions\"\r\n            >\r\n\r\n            </my-select>\r\n        </div>\r\n        <my-dialog v-model:show=\"dialogVisible\">\r\n            <post-form \r\n                @getPost=\"add\"\r\n            />\r\n        </my-dialog>\r\n        <post-list :lists=\"searchedAndSortLists\" @remove=\"remove\"/>\r\n        <div class=\"wrapper_page\">\r\n            <div \r\n            class=\"page\" \r\n            v-for=\"pageNum in maxLists\" \r\n            :key=\"pageNum\"\r\n            :class=\"{\r\n                'selected_page': this.page === pageNum\r\n            }\"\r\n            @click=\"changePage(pageNum)\"\r\n            >{{ pageNum }}</div>\r\n        </div>\r\n        <div class=\"observe\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport PostList from \"@/components/PostList\";\r\nimport PostForm from \"@/components/PostForm\";\r\nimport axios from \"axios\"\r\n\r\nexport default {\r\n    components: {\r\n        PostList, PostForm,\r\n    },\r\n    data() {\r\n        return {\r\n            lists: [],\r\n            dialogVisible: false,\r\n            selectedSort: '',\r\n            page:0,\r\n            limit:10,\r\n            maxLists:0,\r\n            sortOptions: [\r\n                {value: 'title', name: 'По названию'},\r\n                {value: 'body', name: 'По содержимому'}\r\n            ],\r\n            search: '',\r\n        }\r\n    },\r\n    methods: {\r\n        add(newList) {\r\n            this.lists.push(newList);\r\n        },\r\n        remove(list) {\r\n            this.lists = this.lists.filter(l => l.id !== list.id);\r\n        },\r\n        showDialog() {\r\n            this.dialogVisible = true;\r\n        },\r\n        async fetchLists() {\r\n\r\n            try {\r\n                this.page += 1;\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n                    params: {\r\n                        _page: this.page,\r\n                        _limit: this.limit,\r\n                    }\r\n                });\r\n                this.maxLists = Math.ceil(response.headers['x-total-count'] / this.limit)\r\n                this.lists = [...this.lists, ...response.data]\r\n\r\n            }catch {\r\n                alert('пизда')\r\n            }\r\n            \r\n        },\r\n        changePage(pageNum) {\r\n            this.page = pageNum\r\n            this.fetchLists()\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchLists();\r\n       \r\n\r\n    },\r\n    computed: {\r\n        sortedLists() {\r\n            return [...this.lists].sort((list1,list2) =>  list1[this.selectedSort]?.localeCompare(list2[this.selectedSort]))\r\n        },\r\n        searchedAndSortLists() {\r\n            return this.sortedLists.filter(list => list.title.toLowerCase().includes(this.search.toLowerCase()))\r\n        },\r\n        \r\n    },\r\n    watch: {\r\n        // page() {\r\n        //    this.fetchLists\r\n        // } \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n    padding: 20px;\r\n}\r\n.buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.wrapper_page {\r\n    display: flex;\r\n    margin-top: 20px;\r\n}\r\n.page {\r\n    border:1px solid black ;\r\n    padding: 10px;\r\n}\r\n.selected_page {\r\n    border:2px solid green;\r\n}\r\n.observe {\r\n    height: 30px;\r\n}\r\n</style>"],"mappings":";;;EAQaA,KAAK,EAAC;AAAS;;EAkBfA,KAAK,EAAC;AAAc;;gEAWzBC,mBAAA,CAA2B;EAAtBD,KAAK,EAAC;AAAS;;;;;;;;;uBApCxBE,mBAAA,CAqCM,cApCFC,YAAA,CAIWC,mBAAA;gBAHFC,KAAA,CAAAC,MAAM;+DAAND,KAAA,CAAAC,MAAM,GAAAC,MAAA;IACfC,WAAW,EAAC;2CAIZP,mBAAA,CAWM,OAXNQ,UAWM,GAVFN,YAAA,CAG4BO,uBAAA;IAF3BC,OAAK,EAAEC,QAAA,CAAAC,UAAU;IAClBC,KAAyB,EAAzB;MAAA;IAAA;;sBACC,MAAY,C,iBAAZ,cAAY,E;;kCACbX,YAAA,CAKYY,oBAAA;gBAJHV,KAAA,CAAAW,YAAY;+DAAZX,KAAA,CAAAW,YAAY,GAAAT,MAAA;IACpBU,OAAO,EAAEZ,KAAA,CAAAa;wDAKdf,YAAA,CAIYgB,oBAAA;IAJOC,IAAI,EAAEf,KAAA,CAAAgB,aAAa;yDAAbhB,KAAA,CAAAgB,aAAa,GAAAd,MAAA;;sBAClC,MAEE,CAFFJ,YAAA,CAEEmB,oBAAA;MADGC,SAAO,EAAEX,QAAA,CAAAY;IAAG,uC;;+BAGrBrB,YAAA,CAA2DsB,oBAAA;IAA/CC,KAAK,EAAEd,QAAA,CAAAe,oBAAoB;IAAGC,QAAM,EAAEhB,QAAA,CAAAiB;kDAClD5B,mBAAA,CAUM,OAVN6B,UAUM,I,kBATF5B,mBAAA,CAQoB6B,SAAA,QAAAC,WAAA,CANF3B,KAAA,CAAA4B,QAAQ,EAAnBC,OAAO;yBAFdhC,mBAAA,CAQoB;MAPpBF,KAAK,EAAAmC,eAAA,EAAC,MAAM;8BAGqCC,IAAI,KAAKF;;MADzDG,GAAG,EAAEH,OAAO;MAIZvB,OAAK,EAAAJ,MAAA,IAAEK,QAAA,CAAA0B,UAAU,CAACJ,OAAO;wBACtBA,OAAO,gCAAAK,UAAA;oCAEfC,UAA2B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}